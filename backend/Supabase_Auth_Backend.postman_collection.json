{
	"info": {
		"_postman_id": "supabase-auth-backend",
		"name": "Supabase Auth Backend",
		"description": "Complete authentication API collection for Supabase backend with hybrid cookie/header auth support",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						""
					]
				},
				"description": "Check if server is running and see available endpoints"
			},
			"response": []
		},
		{
			"name": "Auth - Sign Up",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/signup",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"signup"
					]
				},
				"description": "Register a new user account"
			},
			"response": []
		},
		{
			"name": "Auth - Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Save access token to environment variable for header-based auth",
							"if (pm.response.code === 200) {",
							"    const response = pm.response.json();",
							"    if (response.session && response.session.access_token) {",
							"        pm.environment.set('access_token', response.session.access_token);",
							"        console.log('Access token saved to environment');",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				},
				"description": "Login user and set HTTP-only cookie + save token for header auth"
			},
			"response": []
		},
		{
			"name": "Auth - Get Current User (Cookie)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/auth/me",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"me"
					]
				},
				"description": "Get current user using HTTP-only cookie (requires login first)"
			},
			"response": []
		},
		{
			"name": "Auth - Get Current User (Header)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"profile"
					]
				},
				"description": "Get current user using Authorization header (requires login first to get token)"
			},
			"response": []
		},
		{
			"name": "Auth - Logout",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/auth/logout",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"logout"
					]
				},
				"description": "Logout user and clear HTTP-only cookie"
			},
			"response": []
		},
		{
			"name": "Test - Protected Route (Cookie)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"profile"
					]
				},
				"description": "Test protected route using cookie authentication"
			},
			"response": []
		},
		{
			"name": "Test - Protected Route (Header)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"profile"
					]
				},
				"description": "Test protected route using Authorization header"
			},
			"response": []
		},
		{
			"name": "Test - Invalid Token",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer invalid_token_here"
					}
				],
				"url": {
					"raw": "{{base_url}}/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"profile"
					]
				},
				"description": "Test error handling with invalid token"
			},
			"response": []
		},
		{
			"name": "Test - No Authentication",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"profile"
					]
				},
				"description": "Test error handling when no authentication is provided"
			},
			"response": []
		},
		{
			"name": "AI - Complete (Protected)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"prompt\": \"Summarize the benefits of TDD.\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/ai/complete",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"ai",
						"complete"
					]
				},
				"description": "Send a user prompt to the protected AI endpoint. Requires login to populate {{access_token}}."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3001",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		}
	]
}
